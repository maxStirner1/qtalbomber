#############################################################################
# Makefile for building: QtalBomberGray
# Generated by qmake (2.01a) (Qt 4.6.2) on: Thu Jun 3 23:10:34 2010
# Project:  QtalBomberGray.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile QtalBomberGray.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_XMLPATTERNS_LIB -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -march=i686 -mtune=generic -O2 -pipe -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -march=i686 -mtune=generic -O2 -pipe -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtXml -I/usr/include/QtXmlPatterns -I/usr/include -I.
LINK          = g++
LFLAGS        = -Wl,--hash-style=gnu -Wl,--as-needed -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtXmlPatterns -lQtXml -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		level.cpp \
		gamefield.cpp \
		bomb.cpp \
		flam.cpp \
		block.cpp \
		player.cpp \
		about.cpp \
		bonus.cpp moc_gamefield.cpp \
		moc_bomb.cpp \
		moc_flam.cpp \
		moc_block.cpp \
		moc_player.cpp \
		moc_bonus.cpp \
		qrc_qtalbomber.cpp
OBJECTS       = main.o \
		level.o \
		gamefield.o \
		bomb.o \
		flam.o \
		block.o \
		player.o \
		about.o \
		bonus.o \
		moc_gamefield.o \
		moc_bomb.o \
		moc_flam.o \
		moc_block.o \
		moc_player.o \
		moc_bonus.o \
		qrc_qtalbomber.o
DIST          = /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		QtalBomberGray.pro
QMAKE_TARGET  = QtalBomberGray
DESTDIR       = 
TARGET        = QtalBomberGray

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: QtalBomberGray.pro  /usr/share/qt/mkspecs/linux-g++/qmake.conf /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtXmlPatterns.prl \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile QtalBomberGray.pro
/usr/share/qt/mkspecs/common/g++.conf:
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/release.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtXmlPatterns.prl:
/usr/lib/libQtXml.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile QtalBomberGray.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/QtalBomberGray1.0.0 || $(MKDIR) .tmp/QtalBomberGray1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/QtalBomberGray1.0.0/ && $(COPY_FILE) --parents level.h gamefield.h bomb.h constant.h flam.h block.h player.h about.h bonus.h .tmp/QtalBomberGray1.0.0/ && $(COPY_FILE) --parents qtalbomber.qrc .tmp/QtalBomberGray1.0.0/ && $(COPY_FILE) --parents main.cpp level.cpp gamefield.cpp bomb.cpp flam.cpp block.cpp player.cpp about.cpp bonus.cpp .tmp/QtalBomberGray1.0.0/ && (cd `dirname .tmp/QtalBomberGray1.0.0` && $(TAR) QtalBomberGray1.0.0.tar QtalBomberGray1.0.0 && $(COMPRESS) QtalBomberGray1.0.0.tar) && $(MOVE) `dirname .tmp/QtalBomberGray1.0.0`/QtalBomberGray1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/QtalBomberGray1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_gamefield.cpp moc_bomb.cpp moc_flam.cpp moc_block.cpp moc_player.cpp moc_bonus.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_gamefield.cpp moc_bomb.cpp moc_flam.cpp moc_block.cpp moc_player.cpp moc_bonus.cpp
moc_gamefield.cpp: level.h \
		constant.h \
		bomb.h \
		flam.h \
		block.h \
		player.h \
		bonus.h \
		about.h \
		gamefield.h
	/usr/bin/moc $(DEFINES) $(INCPATH) gamefield.h -o moc_gamefield.cpp

moc_bomb.cpp: constant.h \
		bomb.h
	/usr/bin/moc $(DEFINES) $(INCPATH) bomb.h -o moc_bomb.cpp

moc_flam.cpp: constant.h \
		bomb.h \
		flam.h
	/usr/bin/moc $(DEFINES) $(INCPATH) flam.h -o moc_flam.cpp

moc_block.cpp: constant.h \
		block.h
	/usr/bin/moc $(DEFINES) $(INCPATH) block.h -o moc_block.cpp

moc_player.cpp: constant.h \
		player.h
	/usr/bin/moc $(DEFINES) $(INCPATH) player.h -o moc_player.cpp

moc_bonus.cpp: player.h \
		constant.h \
		bonus.h
	/usr/bin/moc $(DEFINES) $(INCPATH) bonus.h -o moc_bonus.cpp

compiler_rcc_make_all: qrc_qtalbomber.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_qtalbomber.cpp
qrc_qtalbomber.cpp: qtalbomber.qrc \
		Pixmap/White/white16.png \
		Pixmap/Pink/pink8.png \
		Pixmap/Pink/pink2.png \
		Pixmap/Pink/pink3.png \
		Pixmap/Pink/pink4.png \
		Pixmap/Pink/pink15.png \
		Pixmap/Pink/pink5.png \
		Pixmap/Pink/pink16.png \
		Pixmap/Pink/pink6.png \
		Pixmap/Pink/pink7.png \
		Pixmap/Blue/blue2.png \
		Pixmap/Blue/blue3.png \
		Pixmap/Blue/blue4.png \
		Pixmap/Blue/blue5.png \
		Pixmap/qtalbomber.png \
		Pixmap/Blue/blue6.png \
		Pixmap/White/white9.png \
		Pixmap/Blue/blue7.png \
		Pixmap/White/white10.png \
		Pixmap/bomberman-off.png \
		Pixmap/Blue/blue1.png \
		Pixmap/White/white13.png \
		Pixmap/Blue/blue8.png \
		Pixmap/Pink/pink9.png \
		Pixmap/White/white14.png \
		Pixmap/Pink/pink10.png \
		Pixmap/Blue/blue15.png \
		Pixmap/Grey/grey1.png \
		Pixmap/Blue/blue16.png \
		Pixmap/Pink/pink13.png \
		Pixmap/Grey/grey8.png \
		Pixmap/Pink/pink14.png \
		Pixmap/Grey/grey2.png \
		Pixmap/Grey/grey3.png \
		Pixmap/Grey/grey15.png \
		Pixmap/Grey/grey4.png \
		Pixmap/Grey/grey16.png \
		Pixmap/Grey/grey5.png \
		Pixmap/Grey/grey6.png \
		Pixmap/Grey/grey7.png \
		Pixmap/Blue/blue9.png \
		Pixmap/Blue/blue10.png \
		Pixmap/White/white2.png \
		Pixmap/White/white3.png \
		Pixmap/White/white4.png \
		Pixmap/White/white5.png \
		Pixmap/White/white6.png \
		Pixmap/White/white7.png \
		Pixmap/Blue/blue13.png \
		Pixmap/Grey/grey9.png \
		Pixmap/Blue/blue14.png \
		Pixmap/Grey/grey10.png \
		Pixmap/White/white1.png \
		Pixmap/White/white8.png \
		Pixmap/Grey/grey13.png \
		Pixmap/Grey/grey14.png \
		Pixmap/Pink/pink1.png \
		Pixmap/White/white15.png
	/usr/bin/rcc -name qtalbomber qtalbomber.qrc -o qrc_qtalbomber.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

main.o: main.cpp gamefield.h \
		level.h \
		constant.h \
		bomb.h \
		flam.h \
		block.h \
		player.h \
		bonus.h \
		about.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

level.o: level.cpp level.h \
		constant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o level.o level.cpp

gamefield.o: gamefield.cpp gamefield.h \
		level.h \
		constant.h \
		bomb.h \
		flam.h \
		block.h \
		player.h \
		bonus.h \
		about.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamefield.o gamefield.cpp

bomb.o: bomb.cpp bomb.h \
		constant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bomb.o bomb.cpp

flam.o: flam.cpp flam.h \
		constant.h \
		bomb.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o flam.o flam.cpp

block.o: block.cpp block.h \
		constant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o block.o block.cpp

player.o: player.cpp player.h \
		constant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o player.o player.cpp

about.o: about.cpp about.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o about.o about.cpp

bonus.o: bonus.cpp bonus.h \
		player.h \
		constant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bonus.o bonus.cpp

moc_gamefield.o: moc_gamefield.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamefield.o moc_gamefield.cpp

moc_bomb.o: moc_bomb.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_bomb.o moc_bomb.cpp

moc_flam.o: moc_flam.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_flam.o moc_flam.cpp

moc_block.o: moc_block.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_block.o moc_block.cpp

moc_player.o: moc_player.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_player.o moc_player.cpp

moc_bonus.o: moc_bonus.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_bonus.o moc_bonus.cpp

qrc_qtalbomber.o: qrc_qtalbomber.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_qtalbomber.o qrc_qtalbomber.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

